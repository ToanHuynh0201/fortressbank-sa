GET /users
Description: Lấy danh sách người dùng với pagination
GET /users?page=1&limit=20&role=customer
Response:
{
  "success": true,
  "message": "Users retrieved successfully",
  "data": {
    "users": [
      {
        "user_id": 1,
        "username": "john_doe", 
        "email": "john@example.com",
        "roles": ["customer"],
        "created_at": "2025-01-01T00:00:00Z"
      }
    ],
    "pagination": {
      "current_page": 1,
      "total_pages": 5,
      "total_records": 100,
      "limit": 20
    }
  }
}

GET /users/:id
Description: Lấy thông tin chi tiết người dùng
GET /users/123
Response:
{
  "success": true,
  "message": "User retrieved successfully",
  "data": {
    "user_id": 123,
    "username": "john_doe",
    "email": "john@example.com", 
    "roles": [
      {
        "role_id": 1,
        "role_name": "customer"
      }
    ],
    "created_at": "2025-01-01T00:00:00Z"
  }
}


POST /users
Description: Tạo người dùng mới
httpPOST /users
Content-Type: application/json
{
  "username": "jane_doe",
  "email": "jane@example.com",
  "roles": [1, 2]
}
Response:
{
  "success": true,
  "message": "User created successfully",
  "data": {
    "user_id": 124,
    "username": "jane_doe",
    "email": "jane@example.com",
    "roles": [
      {"role_id": 1, "role_name": "customer"},
      {"role_id": 2, "role_name": "premium"}
    ],
    "created_at": "2025-09-28T10:30:00Z"
  }
}


PATCH /users/:id
Description: Cập nhật thông tin người dùng
PATCH /users/123
Content-Type: application/json

{
  "email": "john.new@example.com",
  "roles": [1, 3]
}
Response:
{
  "success": true,
  "message": "User updated successfully",
  "data": {
    "user_id": 123,
    "username": "john_doe",
    "email": "john.new@example.com",
    "updated_at": "2025-09-28T10:30:00Z"
  }
}


GET /users/:id/roles
Description: Lấy danh sách roles của user
GET /users/123/roles
Response:
{
  "success": true,
  "message": "User roles retrieved successfully",
  "data": {
    "user_id": 123,
    "roles": [
      {"role_id": 1, "role_name": "customer"},
      {"role_id": 2, "role_name": "premium"}
    ]
  }
}


POST /users/:id/roles
Description: Thêm role cho user
POST /users/123/roles
Content-Type: application/json
{
  "role_ids": [2, 3]
}
Response:
{
  "success": true,
  "message": "Roles added successfully",
  "data": {
    "user_id": 123,
    "added_roles": [
      {"role_id": 2, "role_name": "premium"},
      {"role_id": 3, "role_name": "vip"}
    ]
  }
}


DELETE /users/:id/roles/:roleId
Description: Xóa role khỏi user
DELETE /users/123/roles/2
Response:
{
  "success": true,
  "message": "Role removed successfully",
  "data": {
    "user_id": 123,
    "removed_role_id": 2
  }
}


GET /users/:id/accounts
Description: Lấy danh sách tài khoản của user (proxy call to Account Service)
GET /users/123/accounts
Response:
{
  "success": true,
  "message": "User accounts retrieved successfully",
  "data": {
    "user_id": 123,
    "accounts": [
      {
        "account_id": 1001,
        "account_type": "savings",
        "balance": 1500000.00,
        "status": "active"
      }
    ]
  }
}


GET /users/validate/:id
Description: Validate user existence (for internal service calls)
GET /users/validate/123
Response:
{
  "success": true,
  "message": "User exists",
  "data": {
    "user_id": 123,
    "exists": true
  }
}



Error Response Examples
404 - User Not Found:
{
  "success": false,
  "message": "User not found",
  "error": {
    "code": "USER_NOT_FOUND",
    "message": "User with ID 999 does not exist"
  }
}

400 - Validation Error:
{
  "success": false,
  "message": "Validation failed",
  "error": {
    "code": "VALIDATION_ERROR",
    "message": "Username already exists"
  }
}